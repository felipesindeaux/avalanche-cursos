openapi: 3.0.3
info:
  title: Avalanche Cursos
  version: '1.0'
paths:
  /api/courses/:
    get:
      operationId: api_courses_list
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
          description: ''
    post:
      operationId: api_courses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/courses/{course_id}/lessons/:
    get:
      operationId: api_courses_lessons_list
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lesson'
          description: ''
    post:
      operationId: api_courses_lessons_create
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lesson'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
  /api/courses/{course_id}/lessons/{id}/:
    get:
      operationId: api_courses_lessons_retrieve
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    put:
      operationId: api_courses_lessons_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lesson'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    patch:
      operationId: api_courses_lessons_partial_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLesson'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    delete:
      operationId: api_courses_lessons_destroy
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/{course_id}/lessons/{id}/activate/:
    put:
      operationId: api_courses_lessons_activate_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleLesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ToggleLesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToggleLesson'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleLesson'
          description: ''
    patch:
      operationId: api_courses_lessons_activate_partial_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedToggleLesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedToggleLesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedToggleLesson'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleLesson'
          description: ''
  /api/courses/{course_id}/lessons/{id}/deactivate/:
    put:
      operationId: api_courses_lessons_deactivate_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleLesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ToggleLesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToggleLesson'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleLesson'
          description: ''
    patch:
      operationId: api_courses_lessons_deactivate_partial_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedToggleLesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedToggleLesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedToggleLesson'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleLesson'
          description: ''
  /api/courses/{id}/:
    get:
      operationId: api_courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    put:
      operationId: api_courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: api_courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: api_courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/activate/{id}/:
    put:
      operationId: api_courses_activate_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateStatusCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateStatusCourse'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStatusCourse'
          description: ''
    patch:
      operationId: api_courses_activate_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateStatusCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateStatusCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateStatusCourse'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStatusCourse'
          description: ''
  /api/courses/buy/{course_id}/:
    post:
      operationId: api_courses_buy_create
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Students'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Students'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Students'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
          description: ''
  /api/courses/complete/{course_id}/:
    put:
      operationId: api_courses_complete_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Students'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Students'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Students'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
          description: ''
    patch:
      operationId: api_courses_complete_partial_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudents'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudents'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudents'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
          description: ''
  /api/courses/deactivate/{id}/:
    put:
      operationId: api_courses_deactivate_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateStatusCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateStatusCourse'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStatusCourse'
          description: ''
    patch:
      operationId: api_courses_deactivate_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateStatusCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateStatusCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateStatusCourse'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStatusCourse'
          description: ''
  /api/courses/me/:
    get:
      operationId: api_courses_me_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/register/:
    post:
      operationId: api_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/review/{id}/:
    get:
      operationId: api_review_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewList'
          description: ''
    put:
      operationId: api_review_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: api_review_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: api_review_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/review/course/{course_id}/:
    get:
      operationId: api_review_course_list
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewList'
          description: ''
    post:
      operationId: api_review_course_create
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/signin/:
    post:
      operationId: api_signin_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/users/management/{id}/:
    put:
      operationId: api_users_management_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateUserStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUserStatus'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserStatus'
          description: ''
    patch:
      operationId: api_users_management_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUserStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUserStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUserStatus'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserStatus'
          description: ''
  /api/users/me/:
    get:
      operationId: api_users_me_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: ''
  /api/users/password_reset/:
    post:
      operationId: api_users_password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/users/password_reset/confirm/:
    post:
      operationId: api_users_password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /api/users/password_reset/validate_token/:
    post:
      operationId: api_users_password_reset_validate_token_create
      description: An Api View which provides a method to verify that a token is valid
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetToken'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetToken'
          description: ''
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 127
      required:
      - id
      - name
    Course:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 50
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_published:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/UserName'
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      required:
      - categories
      - date_published
      - description
      - id
      - owner
      - price
      - title
      - total_hours
      - updated_at
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Lesson:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        course_id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 50
        description:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - course_id
      - created_at
      - description
      - id
      - title
      - updated_at
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Nested:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 50
        description:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        course:
          type: string
          format: uuid
      required:
      - course
      - created_at
      - description
      - id
      - title
      - updated_at
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    PatchedCourse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 50
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_published:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/UserName'
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PatchedLesson:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        course_id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 50
        description:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedReview:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        score:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
        date_published:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStudents:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/RetrieveMyCourses'
          readOnly: true
        student:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_completed:
          type: boolean
    PatchedToggleLesson:
      type: object
      properties:
        is_active:
          type: boolean
          readOnly: true
    PatchedUpdateStatusCourse:
      type: object
      properties:
        is_active:
          type: boolean
    PatchedUpdateUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 127
        email:
          type: string
          format: email
          maxLength: 254
        is_teacher:
          type: boolean
          readOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
    PatchedUpdateUserStatus:
      type: object
      properties:
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    ResetToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    RetrieveMyCourses:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 50
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_published:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          $ref: '#/components/schemas/UserName'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        lessons:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - categories
      - date_published
      - description
      - id
      - lessons
      - owner
      - price
      - title
      - total_hours
      - updated_at
    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        score:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
        date_published:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - comment
      - course
      - date_published
      - id
      - score
      - updated_at
      - user
    ReviewList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        score:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
        date_published:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - comment
      - course
      - date_published
      - id
      - score
      - updated_at
      - user
    Students:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/RetrieveMyCourses'
          readOnly: true
        student:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_completed:
          type: boolean
      required:
      - course
      - id
      - student
    ToggleLesson:
      type: object
      properties:
        is_active:
          type: boolean
          readOnly: true
      required:
      - is_active
    UpdateStatusCourse:
      type: object
      properties:
        is_active:
          type: boolean
    UpdateUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 127
        email:
          type: string
          format: email
          maxLength: 254
        is_teacher:
          type: boolean
          readOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - id
      - is_teacher
      - name
      - password
    UpdateUserStatus:
      type: object
      properties:
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 127
        email:
          type: string
          format: email
          maxLength: 254
        is_teacher:
          type: boolean
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - id
      - is_teacher
      - name
      - password
    UserName:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 127
      required:
      - id
      - name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
